// Variables
$amber-500: #f59e0b;
$amber-600: #d97706;
$white: #fff;
$gray-200: #e5e7eb; // Added for placeholder text (and now input background)
$gray-300: #d1d5db;
$gray-400: #9ca3af;
$gray-500: #6b7280;
$gray-600: #4b5563;
$gray-700: #374151; // Added for input text color
$gray-800: #1f2937; // Maybe use for container bg instead of black? Let's try black first.
$gray-dark: #111111;
$black: #000;
$transparent: transparent;
$orange-glow-start: rgba(255, 153, 0, 0.9);
$orange-glow-mid: rgba(255, 153, 0, 0.7);
$orange-glow-end: rgba(255, 153, 0, 0.3);
$orange-shadow: rgba(255, 140, 0, 0.4);
$dark-shadow: rgba(0,0,0,0.7);
$gray-100: #f3f4f6; // Define a very light grey
$white-glow: rgba(255, 255, 255, 0.15); // Faint white for gradient start
$white-glow-end: rgba(255, 255, 255, 0.0); // Transparent end

// --- Refined Purple Variables (closer to image) ---
// $purple-light-bg: rgba(235, 230, 255, 0.9); // Previous guess
$purple-light-bg: #F3F1FF; // Very light lavender/off-white (Adjust if needed)
$purple-button-gradient-start: #a855f7; // Keep gradient colors
$purple-button-gradient-end: #7e22ce;   // Keep gradient colors
$purple-caret: #8b5cf6; // A slightly less saturated purple for the caret
// --- END Purple Variables ---

// Keyframes for pulsing animation (assuming a slow pulse)
@keyframes pulse-slow {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.6;
  }
}

// Keyframes for blinking cursor
@keyframes blink-caret {
  from, to { opacity: 1 }
  50% { opacity: 0 }
}

// Section Styles
.heroSection {
  padding-top: 3rem;    // Default mobile padding
  padding-bottom: 4rem; // Default mobile padding
  position: relative;
  overflow: hidden;
  background-color: $gray-dark;

  @media (min-width: 768px) { // md: Tablet and up
    padding-top: 4rem;    // md:pt-16
    padding-bottom: 5rem; // Increased bottom padding slightly for desktop
  }
   @media (min-width: 1024px) { // lg: Large Desktop
     padding-top: 5rem;
     padding-bottom: 6rem;
   }
}

.container {
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  padding-left: 1rem; // Default mobile padding
  padding-right: 1rem;
  position: relative;
  z-index: 10;

  @media (min-width: 768px) { // md:
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

.headline {
  font-size: 2.5rem; // Reduced base size for mobile
  font-weight: 600;
  margin-bottom: 2rem; // Reduced mobile margin
  letter-spacing: -0.025em;
  line-height: 1.2; // Adjust line height for potentially wrapping text

  @media (min-width: 768px) { // md:
    font-size: 3.75rem; // text-6xl (UNCHANGED Desktop)
    margin-bottom: 3rem; // UNCHANGED Desktop margin
    line-height: 1.1;
  }

  .headlineWhite { color: $white; }
  .headlineGradient {
    background: linear-gradient(to right, $white, $gray-400);
    -webkit-background-clip: text; // For Safari/Chrome
    background-clip: text;
    color: $transparent;
  }
}

.subHeadline {
  max-width: 56rem;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 2.5rem; // Keep margin before search bar
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.75rem;

  @media (min-width: 768px) { // md:
      margin-bottom: 3rem; // UNCHANGED Desktop margin
  }

  p {
    color: $gray-300;
    font-size: 1rem; // text-base (Default)
    line-height: 1.375;
    white-space: nowrap; // << ADDED: Prevent wrapping on all sizes
    overflow: hidden; // Optional: Hide overflow if text exceeds container
    text-overflow: ellipsis; // Optional: Add ellipsis if text overflows

     @media (max-width: 767px) {
       font-size: 0.9375rem; // Slightly smaller on mobile
       line-height: 1.5; // Increase line height slightly for smaller font
       text-align: center;
     }
  }
}

// --- SEARCH BAR STYLES V10.2 (Moved Down) ---
.searchBarContainer {
  position: relative;
  display: flex;
  max-width: 40rem;
  margin: 3.5rem auto 0;
  border-radius: 9999px;
  box-shadow: 0 4px 12px rgba($black, 0.1), 0 1px 2px rgba($black, 0.08);
  background-color: $gray-100;

  @media (max-width: 767px) {
     max-width: 90%;
     border-radius: 9999px;
     margin-top: 2.5rem;
  }
}

.searchInput {
  flex-grow: 1;
  background-color: $transparent;
  border: none;
  color: $gray-700;
  padding: 0.75rem 8rem 0.75rem 1.5rem;
  font-size: 0.9375rem;
  outline: none;
  caret-color: $purple-caret;
  border-radius: 9999px;
  box-shadow: none;

  &::placeholder {
    color: $gray-500;
    opacity: 1;
  }

   @media (max-width: 767px) {
     font-size: 0.875rem;
     padding: 0.625rem 7rem 0.625rem 1.25rem;
     border-radius: 9999px;
   }
}

.searchButton {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  transform: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  background-color: $amber-500;
  color: $white;
  border: none;
  padding: 0 1.75rem;
  width: auto;
  border-radius: 9999px;
  font-weight: 700;
  font-size: 0.9375rem;
  cursor: pointer;
  transition: background-color 200ms, opacity 200ms;
  white-space: nowrap;
  flex-shrink: 0;
  overflow: hidden;
  z-index: 0;

  svg {
    width: 1.1em;
    height: 1.1em;
    fill: $white;
  }

  span {
    display: inline-block;
  }

  &:hover {
    background-color: $amber-600;
  }

  @media (max-width: 767px) {
     padding: 0 1.25rem;
     font-size: 0.875rem;
     gap: 0.375rem;
     border-radius: 9999px;
  }
}
// --- END SEARCH BAR STYLES V10.2 ---

// Chat Interface Image Styles
.imageContainer {
  position: relative;
  margin-top: 4rem; // Keep margin consistent
  display: flex;
  justify-content: center;
  perspective: 1500px;

  @media (min-width: 768px) { margin-top: 6rem; }
  @media (min-width: 1024px) { margin-top: 8rem; }
}

.glowImage {
  position: absolute;
  top: -3rem; // Default base value (effectively mobile before this change)
  left: 50%;
  transform: translateX(-50%);
  width: 80%; // Mobile width
  max-width: 1100px;
  height: auto;
  z-index: 0;
  pointer-events: none;

  @media (min-width: 768px) { // md: Desktop styles
     top: -4.5rem; // Keep Desktop position
     width: 70%; // Keep Desktop width
  }

  // --- ADDED Mobile specific top adjustment ---
  @media (max-width: 767px) {
     top: -1.5rem; // << MOVED DOWN (Changed from implicit -3rem)
  }
  // --- End of added adjustment ---
}

.imageFrame {
  position: relative;
  border-radius: 1.5rem;
  overflow: hidden;
  border: 2px solid $gray-600;
  padding: 0.5rem;
  background-color: $black;
  z-index: 10;
  max-width: 1100px;
  width: 95%;
  transform-origin: bottom center;
  transform: rotateX(var(--scroll-rotate-x, 17deg));

  @media (min-width: 768px) { // md:
    padding: 0.75rem;
    width: 90%;
  }
}

.chatImage {
  width: 100%;
  height: auto;
  display: block;
  border-radius: calc(1.5rem - 0.5rem); // Adjusted inner radius based on mobile padding
  
  @media (min-width: 768px) { // md:
     border-radius: calc(1.5rem - 0.75rem); // UNCHANGED Desktop inner radius calculation
  }
}

// Bottom Glow Effect
.bottomGlow {
  position: absolute;
  width: 800px;
  height: 300px;
  border-radius: 9999px;
  background-color: rgba($amber-500, 0.1);
  filter: blur(120px);
  top: 85%; // Position relative to section height
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: -1;

  // ADDED: Reduce size/intensity or hide on mobile
  @media (max-width: 767px) {
    width: 90%; // Use percentage width
    height: 200px; // Reduce height
    filter: blur(90px); // Reduce blur
    top: 90%; // Adjust vertical position
  }
}

// Style for the decorative image container
.decorativeCircle1 {
  position: absolute;
  top: -50px; // Position adjustments
  left: -80px; // Position adjustments
  z-index: 0; // Behind content but above background
  pointer-events: none; // Not interactive
}

// Optional: Common styles for all decorative images if needed
.decorativeImage {
   opacity: 0.6; // Example: make them slightly transparent
   // Add other shared styles like filter effects if desired
}

.gradientCircleDecoration {
  position: absolute;
  border-radius: 50%;
  background: radial-gradient(circle at 50% 100%, rgba(100, 100, 100, 0.35) 0%, rgba(100, 100, 100, 0) 80%);
  z-index: 0;
  pointer-events: none;
  // Default size - Reduced
  width: 250px; // Reduced from 400px
  height: 250px; // Reduced from 400px
}

// --- Positioning Examples (You MUST add these) ---
// Add specific positioning rules for each circle instance like this:

.heroCircle1 {
  // Inherits from .gradientCircleDecoration
  width: 300px; // Reduced from 500px
  height: 300px; // Reduced from 500px
  top: 10%;
  left: -150px; // Adjust position if needed due to size change
}

.heroCircle2 {
  width: 200px; // Reduced from 350px
  height: 200px; // Reduced from 350px
  bottom: 5%;
  right: -100px; // Adjust position if needed
}

.benefitsCircle1 {
   width: 280px; // Reduced from 450px
   height: 280px; // Reduced from 450px
   top: 20%;
   right: -140px; // Adjust position if needed
}

.featuresCircle1 {
    width: 350px; // Reduced from 600px
    height: 350px; // Reduced from 600px
    bottom: -50px; // Adjust position if needed
    left: -175px; // Adjust position if needed
}

.testimonialsCircle1 {
    width: 250px; // Reduced from 400px (or keep default)
    height: 250px; // Reduced from 400px (or keep default)
    top: 5%;
    left: -125px; // Adjust position if needed
}
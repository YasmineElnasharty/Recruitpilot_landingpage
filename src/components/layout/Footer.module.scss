// Base Variables (consider moving to a global scope if used elsewhere)
$amber-500: #f59e0b;
$amber-600: #d97706;
$black: #000;
$white: #fff;
$gray-200: #e5e7eb;
$gray-300: #d1d5db;
$gray-400: #9ca3af;
$gray-500: #6b7280;
$gray-600: #4b5563;
$gray-dark: #111111;
$gray-darker: #222222;
$gray-darkest: #1e1e1e;
$gray-text: #6D6D6D;
$transparent-amber: rgba(255, 167, 0, 0.2); // #FFA70033

// Mixins (optional, but can be helpful)
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Base Footer Styles
.footer {
  background-color: $gray-dark;
  padding-top: 4rem; // pt-16 (Desktop)
  padding-bottom: 1.5rem; // pb-6
  position: relative;
  overflow: hidden;

  // ADDED: Mobile padding adjustment
  @media (max-width: 767px) {
    padding-top: 3rem; // Reduce top padding on mobile
  }
}

// Container
.container {
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem; // px-4
  padding-right: 1rem; // px-4
  position: relative;
  z-index: 10;
  margin-bottom: 4rem; // mb-8 (Space before copyright/scroll-top)

  // ADDED: Mobile margin adjustment
  @media (max-width: 767px) {
    margin-bottom: 3rem; // Reduce bottom margin on mobile
    padding-left: 1.5rem; // Slightly more horizontal padding on mobile if needed
    padding-right: 1.5rem;
  }
}

// Grid Layout
.grid {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr)); // Default: 1 column
  gap: 2rem; // Default gap

  @media (min-width: 768px) { // md:
    grid-template-columns: repeat(3, minmax(0, 1fr)); // UNCHANGED Desktop: 3 columns
  }

  // ADDED: Mobile gap adjustment
  @media (max-width: 767px) {
    gap: 2.5rem; // Increase gap slightly between stacked sections if desired
  }
}

// Column Content
.column {
  // Base styles for each column div if needed
}

.sectionTitle {
  color: $white;
  font-size: 1.125rem; // text-lg (Desktop)
  margin-bottom: 0.75rem; // mb-3
  font-weight: 600;

  // ADDED: Mobile font size adjustment
  @media (max-width: 767px) {
    font-size: 1rem; // text-base on mobile
  }
}

.text {
  color: $gray-400;
  font-size: 0.875rem; // text-sm (Desktop)
  line-height: 1.625;

  // ADDED: Mobile font size adjustment
  @media (max-width: 767px) {
    font-size: 0.8rem; // Slightly smaller text on mobile
  }

  // Margin classes remain the same
  &.marginBottomSmall { margin-bottom: 0.25rem; }
  &.marginBottomMedium { margin-bottom: 0.75rem; }
  &.marginBottomLarge { margin-bottom: 1.5rem; }
}


// Social Icons
.socialIcons {
  display: flex;
  gap: 0.75rem;
}

.socialIconLink {
  width: 2.25rem; // w-9
  height: 2.25rem; // h-9
  border-radius: 9999px; // rounded-full
  @include flex-center;
  // Set default background to the dark color (same as .secondary)
  background-color: $gray-darker;
  // Apply transitions for background, transform, and icon color
  transition: background-color 200ms, transform 200ms ease-out, color 200ms;

  .icon {
    // Default icon color is white
    color: $white;
    font-size: 1rem;
    transition: transform 200ms, color 200ms; // Add color transition for icon
  }

  // Common hover effect for ALL social icons
  &:hover {
    // Change background to orange on hover
    background-color: $amber-600; // Use darker amber for hover state
    transform: translateY(-3px); // Keep the lift effect

    .icon {
      // Change icon color to black for contrast on orange background
      color: $black;
      transform: scale(1.1); // Keep existing scale
    }
  }
}

// Newsletter Section
.newsletterForm {
  display: flex;
  flex-direction: column;
  gap: 0.75rem; // space-y-3
}

.emailInput {
  width: 100%;
  max-width: 20rem; // max-w-xs (Desktop)
  background-color: $gray-darkest;
  color: $gray-300;
  font-size: 0.875rem; // text-sm
  padding: 0.75rem 1rem; // px-4 py-3
  border-radius: 9999px; // rounded-full
  border: 1px solid rgba($gray-600, 0.5); // border border-gray-600/50
  transition: all 200ms;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px $amber-500; // focus:ring-2 focus:ring-amber-500
  }

  &::placeholder {
      color: $gray-400; // Placeholder text color approximation
  }

  // ADDED: Remove max-width on mobile so it fills container better
  @media (max-width: 767px) {
    max-width: none; // Allow input to be full width on mobile
  }
}

.signUpButton {
  align-self: flex-start;
  background-color: $amber-500;
  color: $white;
  padding: 0.75rem 1.5rem; // px-6 py-3
  border-radius: 9999px; // rounded-full
  @include flex-center;
  font-weight: 500; // font-medium
  font-size: 0.875rem; // text-sm
  transition: background-color 200ms, transform 200ms; // Add transform transition
  border: none;
  cursor: pointer;

  &:hover {
    background-color: $amber-600;
    .arrow { // Target arrow span on button hover
      transform: translateX(0.25rem); // group-hover:translate-x-1
    }
  }

  .text { // Text part of the button
     margin-right: 0.25rem; // mr-1
     color: $white; // Ensure text color is white
     font-size: inherit; // Inherit size
     line-height: inherit; // Inherit line height
     margin-bottom: 0; // Reset margin
  }

  .arrow { // Arrow part of the button
    margin-left: 0.25rem; // ml-1
    font-weight: 700; // font-bold
    transition: transform 200ms;
  }

  // ADDED: Ensure button doesn't get too wide on mobile if container is narrow
  @media (max-width: 480px) {
     // Optional: Add max-width if needed on very small screens, e.g.
     // max-width: 15rem;
     // Or adjust padding:
     padding: 0.6rem 1.25rem;
  }
}


// Copyright Section
.copyrightSection {
  background-color: $transparent-amber;
  padding-top: 1rem; // py-4
  padding-bottom: 1rem; // py-4
  // margin-top: -2rem; // This might need adjustment based on scroll-top button position

  // ADDED: Adjust padding slightly for mobile
  @media (max-width: 767px) {
     padding-top: 1.25rem;
     padding-bottom: 1.25rem;
     margin-top: 0; // Remove negative margin when stacked? Test visually.
  }
}

.copyrightContainer {
   max-width: 1280px;
   margin-left: auto;
   margin-right: auto;
   padding-left: 1rem; // px-4
   padding-right: 1rem; // px-4
   display: flex;
   flex-direction: column; // Default mobile layout (Stack items)
   align-items: center;
   justify-content: space-between; // Space out vertically on mobile

   @media (min-width: 768px) { // md:
     flex-direction: row; // UNCHANGED Desktop: Row layout
     justify-content: space-between; // Space out horizontally on desktop
   }

   // ADDED: Mobile padding adjustment
   @media (max-width: 767px) {
      padding-left: 1.5rem;
      padding-right: 1.5rem;
   }
}

.copyrightText {
  color: $gray-text;
  font-size: 0.75rem; // text-xs
  margin-bottom: 0.75rem; // mb-3 (Mobile default margin)
  text-align: center; // Center text on mobile

  @media (min-width: 768px) { // md:
    margin-bottom: 0; // md:mb-0 (UNCHANGED Desktop)
    text-align: left; // Align left on desktop
  }

  .highlight { color: $white; }
}

.links {
  display: flex;
  gap: 1rem; // space-x-4
  align-items: center; // Align items vertically
  flex-wrap: wrap; // Allow links to wrap on very small screens
  justify-content: center; // Center links when wrapped

   // ADDED: Mobile gap adjustment
   @media (max-width: 767px) {
      gap: 0.5rem 1rem; // Smaller vertical gap, keep horizontal gap
   }
}

.linkItem {
  color: $white;
  font-size: 0.75rem; // text-xs
  transition: color 200ms;

  &:hover {
    color: $gray-200;
  }

  &.secondary { // Style for Terms link
    color: $gray-text;
    &:hover {
      color: $gray-500;
    }
  }
}

.separator {
  color: $gray-400;
  font-size: 0.75rem; // text-xs

   // ADDED: Hide separator if links wrap significantly (optional)
   @media (max-width: 360px) { // Example breakpoint
      // display: none; // Consider hiding if layout breaks
   }
}

// Scroll Top Button
.scrollTopContainer {
  display: flex;
  justify-content: center;
  // margin-top: -4rem; // This negative margin might conflict with stacked layout
  position: relative; // Keep relative for positioning within footer flow initially
  z-index: 20;
  transition: opacity 300ms ease-in-out;
  opacity: 0;
  pointer-events: none;
  height: 0; // Collapse height when hidden

  &.visible {
    opacity: 1;
    pointer-events: auto;
    margin-top: -1.25rem; // Adjust negative margin to pull it slightly over the copyright section bottom edge
    height: 2.5rem; // Set height when visible to occupy space correctly
  }

  // ADDED: Fine-tune mobile position relative to stacked copyright section
  @media (max-width: 767px) {
    &.visible {
      margin-top: -1.25rem; // Example: Pull up half its height
    }
  }
}

.scrollTopWrapper {
  position: relative;
  width: 2.5rem; // w-10
  height: 2.5rem; // h-10
}

.scrollTopBackground {
  position: absolute;
  inset: 0;
  width: 2.5rem; // w-10
  height: 2.5rem; // h-10
  background-color: $black;
  border-radius: 9999px; // rounded-full
}

.scrollTopButton {
  position: absolute;
  margin: auto;
  inset: 0;
  background-color: $amber-500;
  color: $black;
  width: 2.25rem; // w-9
  height: 2.25rem; // h-9
  border-radius: 9999px; // rounded-full
  @include flex-center;
  transition: background-color 200ms, transform 200ms;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); // shadow-lg
  z-index: 10; // Ensure button is above background
  text-decoration: none; // Remove default link underline
  font-weight: bold; // Make arrow bold

  &:hover {
    background-color: $amber-600;
    transform: translateY(-0.25rem); // hover:-translate-y-1
  }
}

// Decorative Blur Effect
.blurEffect {
  position: absolute;
  width: 500px;
  height: 300px;
  border-radius: 9999px; // rounded-full
  background-color: rgba($amber-500, 0.02); // bg-amber-500/5 approximation
  filter: blur(150px); // blur-[150px]
  top: 25%; // top-1/4
  left: 0;
  z-index: 0;

  // ADDED: Hide the blur effect on mobile as it might be too much
  @media (max-width: 767px) {
    display: none;
  }
} 